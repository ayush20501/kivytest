name: Build APK

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the repository
    - name: Checkout repository
      uses: actions/checkout@v3

    # Step 2: Set up Python environment
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'

    # Step 3: Install dependencies
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          python3-pip \
          python3-setuptools \
          python3-dev \
          libncurses5 \
          libstdc++6 \
          libssl-dev \
          libsqlite3-dev \
          liblzma-dev \
          zlib1g-dev
        pip install buildozer

    # Step 4: Set up Android SDK/NDK for Buildozer
    - name: Set up Android SDK/NDK
      run: |
        mkdir -p $HOME/android-sdk
        wget https://dl.google.com/android/repository/commandlinetools-linux-6609375_latest.zip -P $HOME/android-sdk
        unzip $HOME/android-sdk/commandlinetools-linux-6609375_latest.zip -d $HOME/android-sdk
        echo "y" | $HOME/android-sdk/cmdline-tools/bin/sdkmanager --sdk_root=$HOME/android-sdk --licenses
        $HOME/android-sdk/cmdline-tools/bin/sdkmanager --sdk_root=$HOME/android-sdk "platform-tools" "build-tools;30.0.3" "platforms;android-30" "ndk;21.4.7075529"

    # Step 5: Build the APK using Buildozer
    - name: Build APK
      run: |
        buildozer android clean
        buildozer android debug

    # Step 6: Upload APK as artifact
    - name: Upload APK as artifact
      uses: actions/upload-artifact@v3
      with:
        name: my-app-apk
        path: bin/*.apk
